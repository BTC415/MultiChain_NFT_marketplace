{"version":3,"sources":["views/custom/account/index.js"],"names":["UserAccountTab","dispatch","useDispatch","navigate","useNavigate","useState","_id","fullName","username","email","cPassword","nPassword","mPassword","userData","setUserData","handleSaveChange","a","toast","error","axios","post","BACKEND_URL","then","response","data","success","message","console","log","handleLogout","catch","e","handleInputChange","event","target","id","value","useEffect","user","JSON","parse","localStorage","getItem","undefined","className","tag","color","onClick","sm","md","for","type","placeholder","onChange"],"mappings":"0PAkJeA,UAlIQ,WAErB,IAAMC,EAAWC,cAEXC,EAAWC,cAGjB,EAAgCC,mBAAS,CACvCC,IAAK,GACLC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,UAAW,GACXC,UAAW,KAPb,mBAAOC,EAAP,KAAiBC,EAAjB,KAUMC,EAAgB,uCAAG,sBAAAC,EAAA,yDACI,KAAvBH,EAASH,WAAoBG,EAASF,YAAcE,EAASD,UAD1C,gBAErBK,IAAMC,MAAM,mCAFS,gDAKbC,IAAMC,KAAN,UAAcC,IAAd,0BAAmD,CACvDR,aACCS,MAAK,SAAAC,GACFA,EAASC,KAAKC,SAChBR,IAAMQ,QAAQF,EAASC,KAAKE,SAC5BC,QAAQC,IAAIL,EAASC,MACrBvB,EAAS4B,eACT1B,EAAS,YAGTc,IAAMC,MAAMK,EAASC,KAAKE,SAC1BC,QAAQC,IAAIL,EAASC,UAEtBM,OAAM,SAACC,GACRJ,QAAQC,IAAI,cAAeG,GAC3Bd,IAAMC,MAAM,qBApBK,uDAwBnBS,QAAQC,IAAI,cAAZ,MACAX,IAAMC,MAAM,kBAzBO,yDAAH,qDA8BhBc,EAAoB,SAACC,GACzBnB,EAAY,2BACPD,GADM,kBAERoB,EAAMC,OAAOC,GAAKF,EAAMC,OAAOE,UAoBpC,OAfAC,qBAAU,WACR,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,kBAChCC,IAATL,GACFxB,EAAY,CACVR,IAAKgC,EAAKhC,IACVC,SAAU+B,EAAK/B,SACfC,SAAU8B,EAAK9B,SACfC,MAAO6B,EAAK7B,MACZC,UAAW,GACXC,UAAW,GACXC,UAAW,OAGd,IAGD,cAAC,WAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAYgC,UAAU,gBAAtB,UACE,cAAC,IAAD,CAAWC,IAAI,KAAf,qBACA,qBAAKD,UAAU,sBAAf,SACE,cAAC,IAAD,CAAQA,UAAU,OAAOE,MAAM,UAAUC,QAAS,kBAAMhC,KAAxD,SACE,sBAAM6B,UAAU,qBAAhB,iCAIN,cAAC,IAAD,CAAKA,UAAU,kBAAf,SACE,cAAC,IAAD,CAAKI,GAAG,KAAR,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,GAAG,IAAID,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,IAAI,WAAX,sBACA,cAAC,IAAD,CAAOC,KAAK,OAAOhB,GAAG,WAAWiB,YAAY,WAAWhB,MAAOvB,EAASL,SAAU6C,SAAU,SAACpB,GAAD,OAAWD,EAAkBC,WAG7H,cAAC,IAAD,CAAKgB,GAAG,IAAID,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,IAAI,WAAX,uBACA,cAAC,IAAD,CAAOC,KAAK,OAAOhB,GAAG,WAAWiB,YAAY,YAAYhB,MAAOvB,EAASN,SAAU8C,SAAU,SAACpB,GAAD,OAAWD,EAAkBC,WAG9H,cAAC,IAAD,CAAKgB,GAAG,IAAID,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,IAAI,QAAX,mBACA,cAAC,IAAD,CAAOC,KAAK,OAAOhB,GAAG,QAAQiB,YAAY,QAAQhB,MAAOvB,EAASJ,MAAO4C,SAAU,SAACpB,GAAD,OAAWD,EAAkBC,WAGpH,cAAC,IAAD,CAAKgB,GAAG,IAAID,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,IAAI,YAAX,8BACA,cAAC,IAAD,CAAOC,KAAK,WAAWhB,GAAG,YAAYiB,YAAY,mBAAmBhB,MAAOvB,EAASH,UAAW2C,SAAU,SAACpB,GAAD,OAAWD,EAAkBC,WAG3I,cAAC,IAAD,CAAKgB,GAAG,IAAID,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,IAAI,YAAX,0BACA,cAAC,IAAD,CAAOC,KAAK,WAAWhB,GAAG,YAAYiB,YAAY,eAAehB,MAAOvB,EAASF,UAAW0C,SAAU,SAACpB,GAAD,OAAWD,EAAkBC,WAGvI,cAAC,IAAD,CAAKgB,GAAG,IAAID,GAAG,KAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,IAAI,YAAX,8BACA,cAAC,IAAD,CAAOC,KAAK,WAAWhB,GAAG,YAAYiB,YAAY,mBAAmBhB,MAAOvB,EAASD,UAAWyC,SAAU,SAACpB,GAAD,OAAWD,EAAkBC","file":"static/js/13.9e24be0e.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, useEffect } from 'react'\r\n\r\nimport toast from 'react-hot-toast'\r\nimport { BACKEND_URL } from '@src/configs'\r\n\r\nimport axios from 'axios'\r\n// ** Store & Actions\r\nimport { useDispatch } from 'react-redux'\r\nimport { handleLogout } from '@store/authentication'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport { Card, CardHeader, CardTitle, Media, Row, Col, Button, Form, Input, Label, FormGroup, Table, CustomInput } from 'reactstrap'\r\n\r\nconst UserAccountTab = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n\r\n  const navigate = useNavigate()\r\n\r\n  // ** States\r\n  const [userData, setUserData] = useState({\r\n    _id: '',\r\n    fullName: '',\r\n    username: '',\r\n    email: '',\r\n    cPassword: '',\r\n    nPassword: '',\r\n    mPassword: ''\r\n  })\r\n\r\n  const handleSaveChange = async () => {\r\n    if (userData.cPassword !== '' && userData.nPassword !== userData.mPassword) {\r\n      toast.error('The new passwords do not match!')\r\n    } else {\r\n      try {\r\n        await axios.post(`${BACKEND_URL}/api/jwt/changeAccount`, {\r\n          userData\r\n        }).then(response => {\r\n          if (response.data.success) {\r\n            toast.success(response.data.message)\r\n            console.log(response.data)\r\n            dispatch(handleLogout())\r\n            navigate('/login')\r\n\r\n          } else {\r\n            toast.error(response.data.message)\r\n            console.log(response.data)\r\n          }\r\n        }).catch((e) => {\r\n          console.log('login error', e)\r\n          toast.error('Request Failed')\r\n        })\r\n\r\n      } catch (e) {\r\n        console.log('login error', e)\r\n        toast.error('Request Failed')\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (event) => {\r\n    setUserData({\r\n      ...userData,\r\n      [event.target.id]: event.target.value\r\n    })\r\n  }\r\n\r\n  // ** Update user image on mount or change\r\n  useEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('userData'))\r\n    if (user !== undefined) {\r\n      setUserData({\r\n        _id: user._id,\r\n        fullName: user.fullName,\r\n        username: user.username,\r\n        email: user.email,\r\n        cPassword: '',\r\n        nPassword: '',\r\n        mPassword: ''\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <CardHeader className='border-bottom'>\r\n          <CardTitle tag='h4'>Account</CardTitle>\r\n          <div className='d-flex mt-md-0 mt-1'>\r\n            <Button className='ml-2' color='primary' onClick={() => handleSaveChange()}>\r\n              <span className='align-middle ml-50'>Save Changes</span>\r\n            </Button>\r\n          </div>\r\n        </CardHeader>\r\n        <Row className='mx-0 mt-1 mb-50'>\r\n          <Col sm='12'>\r\n            <Form>\r\n              <Row>\r\n                <Col md='4' sm='12'>\r\n                  <FormGroup>\r\n                    <Label for='username'>Username</Label>\r\n                    <Input type='text' id='username' placeholder='Username' value={userData.username} onChange={(event) => handleInputChange(event)} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md='4' sm='12'>\r\n                  <FormGroup>\r\n                    <Label for='fullName'>Full Name</Label>\r\n                    <Input type='text' id='fullName' placeholder='Full Name' value={userData.fullName} onChange={(event) => handleInputChange(event)} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md='4' sm='12'>\r\n                  <FormGroup>\r\n                    <Label for='email'>Email</Label>\r\n                    <Input type='text' id='email' placeholder='Email' value={userData.email} onChange={(event) => handleInputChange(event)} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md='4' sm='12'>\r\n                  <FormGroup>\r\n                    <Label for='cPassword'>Current Password</Label>\r\n                    <Input type='password' id='cPassword' placeholder='Current Password' value={userData.cPassword} onChange={(event) => handleInputChange(event)} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md='4' sm='12'>\r\n                  <FormGroup>\r\n                    <Label for='nPassword'>New Password</Label>\r\n                    <Input type='password' id='nPassword' placeholder='New Password' value={userData.nPassword} onChange={(event) => handleInputChange(event)} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md='4' sm='12'>\r\n                  <FormGroup>\r\n                    <Label for='mPassword'>Confirm Password</Label>\r\n                    <Input type='password' id='mPassword' placeholder='Confirm Password' value={userData.mPassword} onChange={(event) => handleInputChange(event)} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </Fragment>\r\n\r\n  )\r\n}\r\nexport default UserAccountTab\r\n"],"sourceRoot":""}